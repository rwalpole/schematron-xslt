<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>uk.co.devexe</groupId>
  <artifactId>schematron-xslt</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Schematron</name>
  <description>Compiles ISO Schematron using XSLT</description>

  <properties>
    <schematron.groupId>iso-schematron</schematron.groupId>
    <schematron.artifactId>iso-schematron-xslt2</schematron.artifactId>
    <schematron.version>1.5</schematron.version>
    <schematron.packaging>zip</schematron.packaging>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <build>
    <plugins>
      <plugin>
        <!--
        NOTE - If you are running this behind a HTTP proxy, you may need to set the Java proxy settings
        to enable the maven-external-dependency-plugin to retrieve its artifacts. e.g.
        
        export MAVEN_OPTS="-Dhttp.proxyHost=wb-cacheclst2.web.local -Dhttp.proxyPort=8080"
        -->
        <groupId>com.savage7.maven.plugins</groupId>
        <artifactId>maven-external-dependency-plugin</artifactId>
        <version>0.5</version>
        <configuration>
          <createChecksum>true</createChecksum>
          <skipChecksumVerification>false</skipChecksumVerification>
          <force>false</force>
          <artifactItems>
            <artifactItem>
              <groupId>${schematron.groupId}</groupId>
              <artifactId>${schematron.artifactId}</artifactId>
              <version>${schematron.version}</version>
              <packaging>${schematron.packaging}</packaging>
              <downloadUrl>http://www.schematron.com/tmp/{artifactId}.{packaging}</downloadUrl>
            </artifactItem>
          </artifactItems>
        </configuration>
        <executions>
          <execution>
            <id>clean-external-dependencies</id>
            <phase>clean</phase>
            <goals>
              <goal>clean-external</goal>
            </goals>
          </execution>
          <execution>
            <id>resolve-install-external-dependencies</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>resolve-external</goal>
              <goal>install-external</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>process-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${schematron.groupId}</groupId>
                  <artifactId>${schematron.artifactId}</artifactId>
                  <version>${schematron.version}</version>
                  <type>${schematron.packaging}</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/schematron</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <version>1.0.1</version>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>transform</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <transformationSets>
            <transformationSet>
              <dir>src/main/resources</dir>
              <stylesheet>${project.build.directory}/schematron/iso_dsdl_include.xsl</stylesheet>
              <outputDir>${project.build.directory}/generated-resources/schematron/included</outputDir>
            </transformationSet>
            <transformationSet>
              <dir>${project.build.directory}/generated-resources/schematron/included</dir>
              <stylesheet>${project.build.directory}/schematron/iso_abstract_expand.xsl</stylesheet>
              <outputDir>${project.build.directory}/generated-resources/schematron/expanded</outputDir>
            </transformationSet>
            <transformationSet>
              <dir>${project.build.directory}/generated-resources/schematron/expanded</dir>
              <stylesheet>${project.build.directory}/schematron/iso_svrl_for_xslt2.xsl</stylesheet>
              <parameters>
                <parameter>
                  <name>terminate</name>
                  <value>true</value>
                </parameter>
                <parameter>
                  <name>message-newline</name>
                  <value>true</value>
                </parameter>
              </parameters>
              <outputDir>${project.build.directory}/generated-resources/schematron/xslt</outputDir>
              <fileMappers>
                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                  <targetExtension>.xslt</targetExtension>
                </fileMapper>
              </fileMappers>
            </transformationSet>
          </transformationSets>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.sf.saxon</groupId>
            <artifactId>Saxon-HE</artifactId>
            <version>9.7.0-3</version>
          </dependency>
        </dependencies>
      </plugin>
      
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/zip-schematron.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>dist-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  
</project>
